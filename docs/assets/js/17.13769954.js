(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{373:function(t,s,e){"use strict";e.r(s);var a=e(1),r=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._m(8),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-1.png",alt:"git分支"}}),t._v(" "),t._m(9),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-2.png",alt:"git分支"}}),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),e("p",[t._v("我们可以看到输出结果")]),t._v(" "),t._m(13),t._m(14),t._v(" "),t._m(15),t._m(16),t._v(" "),t._m(17),t._m(18),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-1.png",alt:"git分支"}}),t._v(" "),t._m(19),t._v(" "),t._m(20),t._m(21),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-2.png",alt:"git分支"}}),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._m(27),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-8.png",alt:"git分支"}}),t._v(" "),t._m(28),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-3.png",alt:"git分支"}}),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._m(32),t._v(" "),t._m(33),t._m(34),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-4.png",alt:"git分支"}}),t._v(" "),t._m(35),t._v(" "),t._m(36),t._v(" "),t._m(37),t._m(38),t._v(" "),t._m(39),t._m(40),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-5.png",alt:"git分支"}}),t._v(" "),t._m(41),t._v(" "),t._m(42),t._v(" "),t._m(43),t._m(44),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-6.png",alt:"git分支"}}),t._v(" "),t._m(45),t._v(" "),t._m(46),t._m(47),t._v(" "),t._m(48),t._m(49),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-13.png",alt:"git分支"}}),t._v(" "),e("p",[t._v("也就会出现四次提交记录，最后一次是当我们merge时git给我们执行的commit。上面我们所提到的在我们合并代码时都是没有冲突的，接下来我们来看看我们合并代码时出现了冲突该如何解决")]),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),e("p",[t._v("在实际开发项目时，我们多个人使用git，在项目进行合并时有时并不会很一帆风顺成功，有时会出现代码冲突。")]),t._v(" "),t._m(52),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-10.png",alt:"git版本控制"}}),t._v(" "),t._m(53),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-11.png",alt:"git版本控制"}}),t._v(" "),t._m(54),t._v(" "),t._m(55),t._m(56),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-12.png",alt:"git版本控制"}}),t._v(" "),t._m(57),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-13.jpg",alt:"git版本控制"}}),t._v(" "),e("p",[t._v("这表示该文件内容出现了冲突，我么打开该文件可以看到：")]),t._v(" "),t._m(58),t._m(59),t._v(" "),t._m(60),e("p",[t._v("现在我们就解决了我们代码之间的冲突了，这时我们的分支关系如下：")]),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-14.png",alt:"git版本控制"}}),t._v(" "),t._m(61),t._v(" "),t._m(62),t._m(63),t._v(" "),t._m(64),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-12.png",alt:"git版本控制"}}),t._v(" "),t._m(68),t._v(" "),t._m(69),t._m(70),t._v(" "),t._m(71),t._m(72),t._v(" "),t._m(73),t._m(74),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-15.png",alt:"git版本控制"}}),t._v(" "),t._m(75),t._v(" "),t._m(76),t._m(77),t._v(" "),t._m(78),t._v(" "),t._m(79),t._v(" "),t._m(80),t._v(" "),t._m(81),t._m(82),t._v(" "),t._m(83),t._v(" "),t._m(84),t._v(" "),t._m(85),t._v(" "),t._m(86),t._m(87),t._v(" "),e("MyImg",{attrs:{src:"/img/git-4-9.png",alt:"git分支"}}),t._v(" "),t._m(88),t._v(" "),t._m(89),t._m(90),t._v(" "),t._m(91),t._m(92),t._v(" "),e("p",[t._v("将远程分支下载我们本地我们可以将我们本地仓库删除来重新操作。")]),t._v(" "),t._m(93),t._m(94),t._v(" "),t._m(95),t._m(96),t._v(" "),t._m(97),t._v(" "),t._m(98),t._v(" "),t._m(99),t._m(100),t._v(" "),t._m(101),t._v(" "),t._m(102),t._v(" "),t._m(103),t._m(104),t._v(" "),t._m(105),t._v(" "),t._m(106),t._m(107),t._v(" "),e("p",[t._v("分支操作目前先讲的这里。")])],1)}),[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"git的分支管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git的分支管理"}},[this._v("#")]),this._v(" Git的分支管理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"常用基础指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用基础指令"}},[this._v("#")]),this._v(" 常用基础指令")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("本章命令")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("git checkout -b 分支名")]),t._v("   创建新分支")]),t._v(" "),e("li",[e("code",[t._v("git checkout 分支名")]),t._v("  切换分支")]),t._v(" "),e("li",[e("code",[t._v("git branch")]),t._v(" 查看本地分支")]),t._v(" "),e("li",[e("code",[t._v("git branch -r")]),t._v(" 查看远程分支")]),t._v(" "),e("li",[e("code",[t._v("git reset --hard HEAD/commitId")]),t._v(" 切换分支版本")]),t._v(" "),e("li",[e("code",[t._v("git log [--pretty=oneline]")]),t._v(" 查看提交历史记录,可选参数"),e("code",[t._v("--pretty=oneline")])]),t._v(" "),e("li",[e("code",[t._v("git log --graph --pretty=oneline --abbrev-commit")]),t._v(" 以时间轴形式展示简洁提交记录信息")]),t._v(" "),e("li",[e("code",[t._v("git merge [-m '备注' --no-ff] 分支名")]),t._v(" 合并分支（默认以"),e("code",[t._v("Fast-forwar")]),t._v(" 模式合并）")]),t._v(" "),e("li",[e("code",[t._v("git push -u origin 分支名")]),t._v(" 关联远程分支")]),t._v(" "),e("li",[e("code",[t._v("git push origin --delete 分支名")]),t._v(" 删除指定远程分支（或使用"),e("code",[t._v("git push origin :分支名")]),t._v("）")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("说到"),s("code",[this._v("git")]),this._v("分支，没有接触过的人肯定会问什么是分支。这里我们来大致的说一下，其实分支类似于将你的项目拷贝了一份，我们在拷贝的那一份上进行项目的开发。就好比一开始我们公司有一个项目，公司来了个两个新人小王和小李，他们俩在开发这个项目时，怕把原来的项目搞坏，就没人复制了一分项目，在自己复制的项目上进行开发，这时，这两份项目就相当于两个分支，而公司原来的项目就相当于主分支。当在进来新人小牛时，小牛又在小王那份项目上复制了一份项目进行开发，而这时，复制的项目就相当于小王那个项目的一个分支，最后项目开发完成时我们将我们的项目合并到了一起，就完成了我们项目的开发。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"git版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git版本"}},[this._v("#")]),this._v(" Git版本")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在git中，我们新创建的项目就会存在一个分支，这个分支就叫主分支 "),s("code",[this._v("master 分支")]),this._v("，分支记录着我们每次提交项目的记录，这些提交记录连接起来就是一条时间线（版本线）。我们一般在开发项目时，会创建出另一个分支，在该分支上创建项目。现在我们来熟悉一下操作分支的一些命令，在创建分支前我们来了解一下"),s("code",[this._v("git")]),this._v("的版本。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("g例如我们初始化一个"),e("code",[t._v("git")]),t._v("仓库"),e("code",[t._v("project")]),t._v("，新创建的仓库默认是有一个"),e("code",[t._v("master")]),t._v("主分支的，并且"),e("code",[t._v("HEAD")]),t._v(" 指针指向当前分支的当前版本（初始时也就是"),e("code",[t._v("master")]),t._v("分支）。我们在项目中新建一个"),e("code",[t._v("test.js")]),t._v(" 文件,并将它提交。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将test.js 文件添加到缓存区")]),t._v("\ngit add test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 提交缓存区的内容")]),t._v("\ngit commit "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一个版本'")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这时我们在"),s("code",[this._v("master")]),this._v("分支上就有了第一个项目版本，"),s("code",[this._v("master")]),this._v("分支应该是这样的:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当我们在创建一个 "),s("code",[this._v("two.js")]),this._v(" 文件提交我们的修改后，"),s("code",[this._v("master")]),this._v("分支版本应该是这样的:")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"版本回退"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#版本回退"}},[this._v("#")]),this._v(" 版本回退")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("通过上面操作我们可以知道，git每提交一次都会有生成一个版本，并且将"),e("code",[t._v("HEAD")]),t._v("指针指向当前分支下的最新版本。如果有一天我们想将我们的项目回退到上一个版本改怎么处理呢，这时我们可以使用命令"),e("code",[t._v("git reset --hard HEAD^")]),t._v(" 或 "),e("code",[t._v("git reset --hard commitId")]),t._v("。在使用这个命令之前我们可以先使用"),e("code",[t._v("git log")]),t._v("来查看一下我们上面提交的历史记录")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git log\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("commit "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fdc0fb441809ae6aca632e6dbe9f04f9640e21d2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nAuthor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" webxiaoma "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("webxiaoma@qq"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   Sun Aug "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("00")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0800")]),t._v("\n\n    第二个版本\n\ncommit "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v("a53e7a41f456b3e22645618ebfff1fe3dce243\nAuthor"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" webxiaoma "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("webxiaoma@qq"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\nDate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("   Sun Aug "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2018")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0800")]),t._v("\n\n    第一个版本\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以看到我们两次的提交记录，里面包含时间，操作的"),e("code",[t._v("git")]),t._v("账号以及每次提交的 "),e("code",[t._v("commit id")]),t._v("，最近的一次提交展示在最上边。 另外我们先将这两个 "),e("code",[t._v("commit id")]),t._v("记下来，下面我们呢会使用到。"),e("strong",[t._v("使用"),e("code",[t._v("git log")]),t._v("后如果我们想退出可以按 "),e("code",[t._v("q")]),t._v(" 键")]),t._v(" 此时我们的项目目录有第一个版本中创建的"),e("code",[t._v("test.js")]),t._v("和第二个版本时创建的"),e("code",[t._v("two.js")]),t._v("。接下来我们将我们的项目回退到第一个版本。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("--")]),this._v("hard "),s("span",{pre:!0,attrs:{class:"token constant"}},[this._v("HEAD")]),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("^")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("此时我们的项目已经会到了第一个版本，我们可以执行"),s("code",[this._v("git log")]),this._v(" 查看版本记录，因为"),s("code",[this._v("git log")]),this._v("输出的内容太多，我们可以简化一下输出内容，我们可以执行"),s("code",[this._v("git log --pretty=oneline")]),this._v("，输出结果")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("a53e7a41f456b3e22645618ebfff1fe3dce243")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 第一个版本\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("可以看到只输出了我们一个版本的记录，并且我们可以查看一下我们的项目，现在只有"),s("code",[this._v("test.js")]),this._v(" 文件，而"),s("code",[this._v("two.js")]),this._v(" 文件已经不见了。此时我们的"),s("code",[this._v("master")]),this._v(" 分支又成了第一版本的样子。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("如果我们的项目已经有好几和版本了，我们想回退到上两个版本怎么弄，我们可以执行"),e("code",[t._v("git reset --hard HEAD^^")]),t._v(", 如果回退到上三个版本我们可以执行"),e("code",[t._v("git reset --hard HEAD^^^")]),t._v(", 我想你已经知道怎么会退到第四个版本了，"),e("code",[t._v("HEAD")]),t._v(" 后面每加一个"),e("code",[t._v("^")]),t._v(" 就是向上找一个版本的意思。如果我们还想从第一个版本回到第二个版本怎么弄，我们可以使用命令"),e("code",[t._v("git reset --hard commitId")]),t._v(", 这时就用到我们上面记下来的两个 "),e("code",[t._v("commitID")]),t._v(" 中的第二个版本的"),e("code",[t._v("Id")]),t._v("了")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git reset "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("--")]),this._v("hard fdc0fb441809ae6aca632e6dbe9f04f9640e21d2\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("执行完，我们查看版本记录"),s("code",[this._v("git log")]),this._v("，可以看到我们当前版本是第二个版本，并且我们的项目中"),s("code",[this._v("two.js")]),this._v("文件又显示出来了。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("当然我们可以使用命令"),s("code",[this._v("git reset --hard commitId")]),this._v("来跳到我们指定的"),s("code",[this._v("commitId")]),this._v("的任何版本，只要我们记住这个ID就可以任意切换。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"tip custom-block"},[e("p",{staticClass:"custom-block-title"},[t._v("小提示")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("这里因为"),e("code",[t._v("commitId")]),t._v(" 太长我们可以只要截取一段就可以跳转到指定的版本了，而不用使用完整的"),e("code",[t._v("commitId")])])]),t._v(" "),e("li",[e("p",[t._v("如果我们想回到我们的原来版本，但是又忘记了原来版本的"),e("code",[t._v("commitID")]),t._v("，我们可以执行"),e("code",[t._v("git reflog")]),t._v(" 来查看每次你使用git操作的版本记录，里面含有简化的"),e("code",[t._v("commitID")]),t._v("。")])])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"创建分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#创建分支"}},[this._v("#")]),this._v(" 创建分支")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("在给 "),e("code",[t._v("git")]),t._v("中我们使用"),e("code",[t._v("git checkout -b 分支名")]),t._v(" 来创建"),e("code",[t._v("git")]),t._v("的分支，并切换到创建的分支。比如我们在上边"),e("code",[t._v("master")]),t._v("分支的第二个版本的时候创建一个"),e("code",[t._v("dev")]),t._v("分支。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git checout "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("-")]),this._v("b dev\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这时我们就创建了一个和"),s("code",[this._v("master")]),this._v("项目一样的"),s("code",[this._v("dev")]),this._v("分支，我们可以从"),s("code",[this._v("git base")]),this._v(" 中可以看到")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("这时我们的项目就有一个"),e("code",[t._v("master")]),t._v(" 分支和 "),e("code",[t._v("dev")]),t._v(" 分支了，并且"),e("code",[t._v("HEAD")]),t._v("指针指向当前的"),e("code",[t._v("dev")]),t._v("分支，其版本和"),e("code",[t._v("master")]),t._v("最新版本一样为第二个版本,我们可以用图来表示")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"查看所有分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看所有分支"}},[this._v("#")]),this._v(" 查看所有分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们也可以使用"),s("code",[this._v("git branch")]),this._v(" 来查看所有分支。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git branch\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[this._v("// 输出结果")]),this._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("*")]),this._v(" dev\n  master\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("结果中带 "),s("code",[this._v("*")]),this._v(" 号的代表当前所在的分支。我们可以在"),s("code",[this._v("dev")]),this._v("分支上创建一个"),s("code",[this._v("dev.js")]),this._v(" 文件，并将它提交，然后我们查看版本提交记录")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git add "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\ngit commit "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dev的第三个版本'")]),t._v("\n\ngit log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出结果")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("40703")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbf308315022cef120c28a90d130ad90a05")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dev的第三个版本\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fdc0fb441809ae6aca632e6dbe9f04f9640e21d2")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" 第二个版本\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v("a53e7a41f456b3e22645618ebfff1fe3dce243 第一个版本\n\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们可以看到这时"),s("code",[this._v("dev")]),this._v("分支就会有三个版本，而此时"),s("code",[this._v("master")]),this._v("分支还停留在第二个版本，他们的关系如图：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"切换分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#切换分支"}},[this._v("#")]),this._v(" 切换分支")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以使用"),e("code",[t._v("git checkout 分支名")]),t._v("将我们的项目切换到"),e("code",[t._v("master")]),t._v("分支，其实就是将"),e("code",[t._v("HEAD")]),t._v(" 指针指向"),e("code",[t._v("master")]),t._v("分支。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git checkout master\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("此时我们可以看到，我么目录中创建的"),e("code",[t._v("dev.js")]),t._v(" 消失了，因为这个文件是在我们的"),e("code",[t._v("dev")]),t._v("分支上，"),e("code",[t._v("master")]),t._v("分支上是不存在的。并且我们可以执行"),e("code",[t._v("git branch")]),t._v(" 来查看当前所处分支。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("  dev\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("*")]),this._v(" master\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("可以看到，"),s("code",[this._v("*")]),this._v("号在"),s("code",[this._v("master")]),this._v("分支上，说明我们当前分支是"),s("code",[this._v("master")]),this._v("分支，并且他们的关系图如下：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"合并分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并分支"}},[this._v("#")]),this._v(" 合并分支")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("现在我们在"),e("code",[t._v("master")]),t._v(" 分支上，并且master分支比"),e("code",[t._v("dev")]),t._v(" 分支少一个版本，我们可以将"),e("code",[t._v("dev")]),t._v(" 分支合并到"),e("code",[t._v("master")]),t._v(" 分支上。这里使用"),e("code",[t._v("git merge 要合并进来的分支名")]),t._v(" 命令，这个命令默认是使用的"),e("code",[t._v("Fast-forward")]),t._v(" 快速合并模式")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git merge dev\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出结果")]),t._v("\nUpdating fdc0fb4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v(".40703")]),t._v("db\nFast"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("forward\n dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" file changed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("insertions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deletions")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n create mode "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("100644")]),t._v(" dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("js\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("执行完，我们可以看到我们文件夹中出现了"),e("code",[t._v("dev.js")]),t._v(" 文件，这时我们"),e("code",[t._v("master")]),t._v("版本和"),e("code",[t._v("dev")]),t._v("分支的最新版本就一样了，此时我们"),e("code",[t._v("HEAD")]),t._v("指针就指向了"),e("code",[t._v("master")]),t._v("分支的第三个版本上边")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("另外我们可以看到我们合并后输出的结果中使用的"),e("code",[t._v("Fast-forwar")]),t._v(" 模式合并，此合并方式不会创造一个新的"),e("code",[t._v("commitID")]),t._v("(或commit节点)，而是使用"),e("code",[t._v("dev")]),t._v("的"),e("code",[t._v("commit")]),t._v("节点。也就如图所示，将"),e("code",[t._v("master")]),t._v("分支指针直接移动到了"),e("code",[t._v("dev")]),t._v("分支所在的位置。默认情况下，"),e("code",[t._v("git merge")]),t._v("采用"),e("code",[t._v("fast-forward")]),t._v("模式。我们来看一下的提交版本记录:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("40703")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbf308315022cef120c28a90d130ad90a05")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dev的第三个版本\nfdc0fb441809ae6aca632e6dbe9f04f9640e21d2 第二个版本\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v("a53e7a41f456b3e22645618ebfff1fe3dce243 第一个版本\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以发现合并后的提交版本记录的信息和上面我们为合并时输出的提交版本记录的信息是一模一样的。那我们有没有办法合并分支时不使用"),e("code",[t._v("Fast-forwar")]),t._v(" 模式，当然有，我么在合并分支时可以添加"),e("code",[t._v("--no-ff")]),t._v(" 参数这里的"),e("code",[t._v("ff")]),t._v("就是"),e("code",[t._v("Fast-forwar")]),t._v(" 模式的缩写，并且我们还可以添加"),e("code",[t._v("master")]),t._v("的提交备注, 命令就是这样"),e("code",[t._v("git merge -m '备注' --no-ff 分支名")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 首先我们将master分支回退到第二个版本")]),t._v("\ngit reset "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("hard "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不使用`Fast-forwar` 模式合并dev到master分支")]),t._v("\ngit merge "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master 的第三个版本'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("no"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("ff dev\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我们来查看一下版本记录")]),t._v("\n\ngit log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出结果")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3363")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("f4dcf86b311f7843f5c7191a202b8e17dc5f")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" master 的第三个版本\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("40703")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dbf308315022cef120c28a90d130ad90a05")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dev的第三个版本\nfdc0fb441809ae6aca632e6dbe9f04f9640e21d2 第二个版本\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("72")]),t._v("a53e7a41f456b3e22645618ebfff1fe3dce243 第一个版本\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以看到这次提交记录结果多出了一条，这条记录就是"),e("code",[t._v("master")]),t._v("分支合并时的提交记录，并且还有自己的备注，也就是说在禁用"),e("code",[t._v("Fast-forwar")]),t._v(" 模式合并后，"),e("code",[t._v("master")]),t._v("分支就不是单纯的将指针移动到"),e("code",[t._v("dev")]),t._v("分支了，"),e("strong",[t._v("而是"),e("code",[t._v("git")]),t._v("会讲两个分支中不同的修改合并起来，在提交一次（commit一次），我们可以看到不使用"),e("code",[t._v("Fast-forwar")]),t._v(" 模式时会多出一个commitId")]),t._v(" 这时"),e("code",[t._v("dev")]),t._v("分支就合并到了"),e("code",[t._v("master")]),t._v("分支上。这时我们的分支版本关系图是这样的")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"解决冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突"}},[this._v("#")]),this._v(" 解决冲突")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1-git-merge-解决冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-git-merge-解决冲突"}},[this._v("#")]),this._v(" 1. git merge 解决冲突")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们这里还使用我们上一个项目的例子，比如我们有一个"),e("code",[t._v("project")]),t._v("项目的git仓库，它有一个"),e("code",[t._v("master")]),t._v("分支,并且在"),e("code",[t._v("master")]),t._v("分支上已经有两个版本，第一个版本中我们创建了"),e("code",[t._v("test.js")]),t._v("文件，第二个版本中我们创建了"),e("code",[t._v("two.js")]),t._v("文件，我们这master分支上使用"),e("code",[t._v("git checkout -b dev")]),t._v("创建出一个新的"),e("code",[t._v("dev")]),t._v("分支，这时我们的分支结构如下：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以看到"),e("code",[t._v("master")]),t._v(" 分支和"),e("code",[t._v("dev")]),t._v("分支上的版本是一样的，并且"),e("code",[t._v("HEAD")]),t._v("指针指向"),e("code",[t._v("dev")]),t._v("分支的第二个版本，现在我们打开"),e("code",[t._v("two.js")]),t._v("文件，在"),e("code",[t._v("two.js")]),t._v("文件第一行写一个段"),e("code",[t._v("console.log('我是dev分支上的two.js')")]),t._v("，然后我们将我们的修改提交，现在我们的分支结构如下：")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以看到"),e("code",[t._v("master")]),t._v(" 分支处于第二个版本，而"),e("code",[t._v("dev")]),t._v("分支处于第三个版本了。我们可以使用 "),e("code",[t._v("git log")]),t._v(" 查看版本信息, 接下来我们将"),e("code",[t._v("HEAD")]),t._v("指针指向"),e("code",[t._v("master")]),t._v("分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git checkout master\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("然后我们打开master分支上的"),s("code",[this._v("two.js")]),this._v("文件，并在第一行写入"),s("code",[this._v("console.log('我是master分支上的two.js')")]),this._v("，然后我们将我们修改再次提交，这次我们分支的结构如下:")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以看到，"),e("code",[t._v("master")]),t._v("分支和"),e("code",[t._v("dev")]),t._v("分支都存在各自的第三个版本，并且它们的第三个版本修改内容是不一样的。这时候我们使用"),e("code",[t._v("git merge")]),t._v("将dev分支合并到master分支上时，"),e("code",[t._v("git")]),t._v("旧无法使用"),e("code",[t._v("Fast-forwar")]),t._v(" 模式来合并我们的代码了，因为我们的代码就会出现冲突。这时 "),e("strong",[t._v("git会将两个分支代码不同的地方取出放到当前冲突的文件中，让我们进行手动修改，我们修改完成提交后，然后把master指针指向这个新的commit")]),t._v("， 我们来执行"),e("code",[t._v("git merge dev")]),t._v("，我们可以看到我们目录中"),e("code",[t._v("two.js")]),t._v(" 文件有一个黄色感叹号。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是master分支上的two.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是dev分支上的two.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" dev\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以看到两个分支上的修改都给我们展示出来了，从"),e("code",[t._v("<<<<<<< HEAD")]),t._v(" 到 "),e("code",[t._v("=======")]),t._v(" 的代码是我们当前分支的修改的代码，而从"),e("code",[t._v("=======")]),t._v(" 到"),e("code",[t._v(">>>>>>> dev")]),t._v(" 的代码是我们要合并的代码，这时git不知道，到底是保留master分支上的修改，还是保留dev分支上的修改，所以我们需要手动去解决这些冲突的代码，到哪那些使我们想要保留的。如果现在我们保留当前的修改，则我们将"),e("code",[t._v("dev")]),t._v("分支上的修改删掉，把"),e("code",[t._v("<<<<<<< HEAD")]),t._v(" 、 "),e("code",[t._v("=======")]),t._v(" 和"),e("code",[t._v(">>>>>>> dev")]),t._v(" 也删掉。然后我们在重新提交")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v(".")]),this._v("\n\ngit commit "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("-")]),this._v("m "),s("span",{pre:!0,attrs:{class:"token string"}},[this._v("'merge 修改冲突'")]),this._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这时我们知道了 "),s("strong",[this._v("git是使用非"),s("code",[this._v("Fast-forwar")]),this._v(" 模式")]),this._v(" 来进行冲突代码的合并的。 ，并且我们使用"),s("code",[this._v("git log --pretty=oneline")]),this._v(" 来查看提交记录")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token number"}},[t._v("897254")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("deeaef5485e2c6296a2fecd2fd53df02f3")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" merge 修改冲突\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("df8f658cd5b997fd5a678288918f336ac92f9ad master第三个版本\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("a41e42b2d60479d45266cf98c41ad352af1c6c42")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dev 第三个版本\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("844056e1")]),t._v("f2f585cd4b0c86277acea39bcf8a0ecf 第二个版本\n"),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2e57178")]),t._v("f27461d47617aaf1cc165d7ba8e94b942 第一个版本\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以发现合并后的"),e("code",[t._v("master")]),t._v("分支含有"),e("code",[t._v("dev")]),t._v(" 分支的提交记录以及我们最终解决冲突后的一次提交记录。我们从上面的图中可以看到，我们使用"),e("code",[t._v("git merge")]),t._v(" 将"),e("code",[t._v("dev")]),t._v("分支合并到"),e("code",[t._v("master")]),t._v("分支后，我们的"),e("code",[t._v("master")]),t._v(" 分支上还是会有两条时间轴线，我们也可以使用"),e("code",[t._v("git log --graph --pretty=oneline --abbrev-commit")]),t._v(" 来查看版本记录的图形界面，我们可以很清晰的看到两条时间轴线。")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("   "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3265690")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" merge 修改冲突\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\\\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0841970")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dev第三个版本\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" fc5af12 master的第三个版版本\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1807910")]),t._v(" 第二个版本\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),t._v("f24ee 第一个版本\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们能不能将"),s("code",[this._v("master")]),this._v("分支上的版本记录变成一条时间轴线呢，答案是可行的，下面我们来实现这个")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-git-rebase-解决冲突"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-git-rebase-解决冲突"}},[this._v("#")]),this._v(" 2. git rebase 解决冲突")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用"),s("code",[this._v("git rebase")]),this._v("命令网上人们翻译成 "),s("strong",[this._v("变基")]),this._v("，现在我们使用这种方法来来合并我们的代码，并解决项目冲突，我们将我们的项目中"),s("code",[this._v("master")]),this._v("分支回退到合并前，怎么回退，自己看上边版本回退，回退完成后我们的分支是这种状态")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("使用"),s("code",[this._v("git log --graph --pretty=oneline --abbrev-commit")]),this._v(" 查看"),s("code",[this._v("master")]),this._v("分支版本记录是这样的")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("fc5af12")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" master的第三个版版本\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1807910")]),t._v(" 第二个版本\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),t._v("f24ee 第一个版本\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("现在我们使用"),s("code",[this._v("git rebase")]),this._v("来合并分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git rebase\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("结果会输出的一些信息我们不管，我们可以看到"),s("code",[this._v("two.js")]),this._v("文件又出现感叹号了，说明这个文件有冲突了，该文件中内容变成了这样")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是dev分支上的two.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是master分支上的two.js'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" master的第三个版版本\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("我们可以和上面使用"),e("code",[t._v("git merge")]),t._v("合并时的冲突对比发现，这次"),e("code",[t._v("<<<<<<< HEAD")]),t._v(" 到 "),e("code",[t._v("=======")]),t._v(" 内容是合并进来的分支内容，而 "),e("code",[t._v("=======")]),t._v(" 到"),e("code",[t._v(">>>>>>>")]),t._v(" 之间是当前"),e("code",[t._v("master")]),t._v("分支的内容正好与"),e("code",[t._v("git merge")]),t._v("合并时相反了。这是因为使用"),e("code",[t._v("git rebase")]),t._v(" 进行合并时，先将"),e("code",[t._v("dev")]),t._v("分支的内容合并到这两个分支相同版本的后边，然后将当前分支在进行合并，这时出现冲突，将出现冲突的代码全部展示到"),e("code",[t._v("master")]),t._v("分支中的冲突文件中，让我们来进行手动修改，修改完成后我们在进行提交。以这种合并方式进行合并的"),e("code",[t._v("master")]),t._v("分支版本如下：")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这是"),s("code",[this._v("master")]),this._v(" 分支上就只存在一个记录版本的时间的轴线，我们使用"),s("code",[this._v("git log --graph --pretty=oneline --abbrev-commit")]),this._v(" 也可以看到")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git log "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("graph "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("pretty"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("oneline "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("abbrev"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("commit\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 结果")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("e68002")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" merge 合并分支\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0841970")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dev"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dev第三个版本\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1807910")]),t._v(" 第二个版本\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("02")]),t._v("f24ee 第一个版本\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们可以看到"),s("code",[this._v("master")]),this._v(" 分支上就只存在一个记录版本的时间的轴线。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("出现冲突的几种情况")]),this._v(" "),s("ol",[s("li",[this._v("不同分支修改了同一文件，并且都做了提交，这时合并分支时会出现冲突。")]),this._v(" "),s("li",[this._v("同一分支，不同开发人员在各自的本地修改了相同文件时，当其中一个人员上传到远程仓库后，另一个成员拉取时一般会出现代码冲突。")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"删除分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[this._v("#")]),this._v(" 删除分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们可以使用命令"),s("code",[this._v("git branch -D 分支名")]),this._v(" 来删除我们自定的分支，")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[this._v("D")]),this._v(" dev\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"warning custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("注意")]),this._v(" "),s("p",[this._v("删除某个分支前，当前"),s("code",[this._v("HEAD")]),this._v("指针不要再该分支上，要切换到其它分支才可以删除。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"远程分支操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#远程分支操作"}},[this._v("#")]),this._v(" 远程分支操作")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果我们本地新建了一个"),s("code",[this._v("dev")]),this._v(" 分支怎么将该分支推送到远程呢，并且如果远程有一个"),s("code",[this._v("dev")]),this._v(" 分支我们又该如何将该分支拉去下来呢。首先我们在以上边的的项目为例，我们要在远程有一个仓库")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_1-将本地分支推送到远程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-将本地分支推送到远程"}},[this._v("#")]),this._v(" 1. 将本地分支推送到远程")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[this._v("// 将dev分支推送到远程")]),this._v("\ngit push origin dev\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这时我们远程仓库就会出现一个"),s("code",[this._v("dev")]),this._v(" 分支")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("这时我们只是将本地"),e("code",[t._v("dev")]),t._v(" 分支推送到了远程，还用有将本地"),e("code",[t._v("dev")]),t._v(" 分支和远程分支关联起来，如果这时我们修改dev分支上的文件，提交后，在执行"),e("code",[t._v("git push")]),t._v(" 就会提示我们 "),e("code",[t._v("git push --set-upstream origin dev")]),t._v(", 我们可以执行该命令将本地的"),e("code",[t._v("dev")]),t._v(" 分支和远程"),e("code",[t._v("dev")]),t._v("分支关联起来")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git push "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("--")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[this._v("set")]),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("-")]),this._v("upstream origin dev\n或\ngit push "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("-")]),this._v("u origin dev\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("其实当前我们执行完上面其中一个代码时，就是在我们"),s("code",[this._v(".git")]),this._v(" 目录下的"),s("code",[this._v("config")]),this._v(" 文件下添加了一个远程分支记录")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v('[remote "origin"]\n\turl = git@github.com:webxiaoma/project.git\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n[branch "master"]\n\tremote = origin\n\tmerge = refs/heads/master\n[branch "dev"]\n\tremote = origin\n\tmerge = refs/heads/dev\n')])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_2-将远程分支下载到本地"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-将远程分支下载到本地"}},[this._v("#")]),this._v(" 2. 将远程分支下载到本地")])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("$ git clone git@github"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("webxiaoma"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("project"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("克隆下来的项目，默认只会克隆"),s("code",[this._v("master")]),this._v("分支，我们需要在将"),s("code",[this._v("dev")]),this._v(" 分支克隆下来，使用命令"),s("code",[this._v("git checout -b 本地分支名 origin/远程分支名")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git chekcout "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("-")]),this._v("b dev origin"),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("/")]),this._v("dev\n")])])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("p",[t._v("这时我们就创建了一个和远程关联的本地的"),e("code",[t._v("dev")]),t._v("分支，并且"),e("code",[t._v(".git")]),t._v(" 目录下的"),e("code",[t._v("config")]),t._v(" 文件中也生成了"),e("code",[t._v("dev")]),t._v("的分支记录，我们可以使用"),e("code",[t._v("git branch")]),t._v(" 来查看分支。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_3-克隆远程的指定分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-克隆远程的指定分支"}},[this._v("#")]),this._v(" 3. 克隆远程的指定分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果我们想克隆指定的分支我们可以使用这个命令"),s("code",[this._v("git clone -b 分支名 仓库地址")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"language-js extra-class"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("git cloen "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("b dev  git@github"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("webxiaoma"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("project"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("git\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这时克隆的只是我们远程仓库的"),s("code",[this._v("dev")]),this._v("分支。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_4-查看远程分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看远程分支"}},[this._v("#")]),this._v(" 4. 查看远程分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("我们可以执行命令"),s("code",[this._v("git branch -r")]),this._v(" 来查看远程分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("-")]),this._v("r\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"_5-删除远程分支"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-删除远程分支"}},[this._v("#")]),this._v(" 5. 删除远程分支")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("如果我们想删除远程的某个分支我们可以使用"),s("code",[this._v("git push origin --delete 分支名")]),this._v(" 或 "),s("code",[this._v("git push origin :分支名称")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[this._v("git push origin "),s("span",{pre:!0,attrs:{class:"token operator"}},[this._v("--")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[this._v("delete")]),this._v(" dev\n或\ngit push origin "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[this._v(":")]),this._v("dev\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("这时我们在看远程仓库，"),s("code",[this._v("dev")]),this._v("分支就已经被删除了")])}],!1,null,null,null);s.default=r.exports}}]);