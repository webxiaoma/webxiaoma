(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{563:function(t,a,s){"use strict";s.r(a);var e=s(24),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"java-泛型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java-泛型"}},[t._v("#")]),t._v(" Java-泛型")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#前言"}},[t._v("前言")])]),s("li",[s("a",{attrs:{href:"#泛型方法"}},[t._v("泛型方法")])]),s("li",[s("a",{attrs:{href:"#泛型集合"}},[t._v("泛型集合")])]),s("li",[s("a",{attrs:{href:"#泛型类"}},[t._v("泛型类")])]),s("li",[s("a",{attrs:{href:"#泛型的限制"}},[t._v("泛型的限制")]),s("ul",[s("li",[s("a",{attrs:{href:"#extends"}},[t._v("extends")])]),s("li",[s("a",{attrs:{href:"#通配符"}},[t._v("通配符")])])])])])]),s("p"),t._v(" "),s("p",[t._v("🐴")]),t._v(" "),s("h2",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[s("code",[t._v("Java")]),t._v(" 泛型（"),s("code",[t._v("generics")]),t._v("）是 "),s("code",[t._v("JDK 5")]),t._v(" 中引入的一个新特性, 泛型提供了编译时类型安全检测机制，该机制允许程序员在编译时检测到非法的类型。在"),s("code",[t._v("java")]),t._v("集合中，存入对象后，在取出时该对象时，该对象就会成为"),s("code",[t._v("Object")]),t._v("类型。这时我们使用泛型就可以避免这种情况。")]),t._v(" "),s("h2",{attrs:{id:"泛型方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型方法"}},[t._v("#")]),t._v(" 泛型方法")]),t._v(" "),s("h2",{attrs:{id:"泛型集合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型集合"}},[t._v("#")]),t._v(" 泛型集合")]),t._v(" "),s("h2",{attrs:{id:"泛型类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型类"}},[t._v("#")]),t._v(" 泛型类")]),t._v(" "),s("h2",{attrs:{id:"泛型的限制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#泛型的限制"}},[t._v("#")]),t._v(" 泛型的限制")]),t._v(" "),s("h3",{attrs:{id:"extends"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#extends"}},[t._v("#")]),t._v(" extends")]),t._v(" "),s("h3",{attrs:{id:"通配符"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#通配符"}},[t._v("#")]),t._v(" 通配符")])])}),[],!1,null,null,null);a.default=r.exports}}]);