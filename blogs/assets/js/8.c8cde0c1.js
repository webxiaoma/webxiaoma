(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{303:function(t,e,a){"use strict";a.r(e);var s=a(1),v=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"常用基础指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用基础指令","aria-hidden":"true"}},[t._v("#")]),t._v(" 常用基础指令")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",{staticClass:"custom-block-title"},[t._v("本章命令")])]),t._v(" "),a("h2",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),a("p",[t._v("我们在开发项目时git是按照一个时间线来控制我们的项目版本的，也就是我们每"),a("code",[t._v("git commit")]),t._v(" 一次，git就会记录这次提交时间并创建一个项目版本，生成一个"),a("code",[t._v("commitId")]),t._v("来给我们这个版本一个唯一标记，某一天我们想回到我们的某个版本，只要我们知道这个版本的"),a("code",[t._v("commitId")]),t._v("就可以将我们的项目切换到指定的版本。")]),t._v(" "),a("h4",{attrs:{id:"二、git的版本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、git的版本操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 二、git的版本操作:")]),t._v(" "),a("p",[t._v("操作之前我们在我们的工作区新建一个mygit.txt文件。")]),t._v(" "),a("p",[a("strong",[t._v("1.管理修改")])]),t._v(" "),a("p",[t._v('我们在我们新建的mygit.txt文件中添加一句 "my first git"\n查看文件中的内容我们可以执行命令：')]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ cat mygit.txt\nmy first git\n")])])]),a("p",[t._v("提交后我们可以使用 "),a("code",[t._v("git diff HEAD -- mygit.txt")]),t._v(" 命令查看工作区和版本库里的最新区别")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git diff \n")])])]),a("p",[a("strong",[t._v("2.撤销修改")])]),t._v(" "),a("p",[t._v("例如上面的mygit.txt文件中我们的内容是  "),a("strong",[t._v("my first git")]),t._v(",我们不小心将其改成了 "),a("strong",[t._v("my last git")])]),t._v(" "),a("p",[t._v("这时必须要及时更改，不改可能会丢工作怎么办,\n第一种方法就是，我们手动把我们写的删掉，如果更改的太多这样做会很麻烦.\n我们还可以使用 "),a("code",[t._v("git checkout -- file")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git checkout -- mygit.txt\n")])])]),a("p",[t._v("命令"),a("code",[t._v("git checkout -- readme.txt")]),t._v("意思就是，把"),a("code",[t._v("mygit.txt")]),t._v("文件在工作区的修改全部撤销，这里有两种情况：")]),t._v(" "),a("p",[t._v("一种是"),a("code",[t._v("readme.txt")]),t._v("自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；")]),t._v(" "),a("p",[t._v("一种是"),a("code",[t._v("readme.txt")]),t._v("已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。")]),t._v(" "),a("p",[t._v("总之，就是让这个文件回到最近一次"),a("code",[t._v("git commit")]),t._v("或"),a("code",[t._v("git add")]),t._v("时的状态。")]),t._v(" "),a("p",[t._v("我们可以执行"),a("code",[t._v("cat mygit.txt")]),t._v(" 是否发生变化")]),t._v(" "),a("p",[a("strong",[t._v("3.版本回退")])]),t._v(" "),a("p",[t._v("我们在使用git上传我们的文件时，我们有事会碰到，刚上传就发现传错了，但是已经覆盖了我们远程仓库的源文件了。这时候我们是不是很懵逼。不知所措，放心，git给我们留了一手，因为git存在历史记录，我们可以查看历史记录：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git log\n")])])]),a("p",[t._v("git log命令显示从最近到最远的提交日志，可能git会为我们打印出很多的记录信息，如果我们想看简洁的历史记录我们可以这样：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git log --pretty=oneline\n3628162fb23d48395383f8f31179f24e0882e1e0 one\nea34578d54d6d7dd233c827ed32a8cd576c5ee85 two\ncb926e7ea50ad11b8f9e909c05226233bf755030 three\n")])])]),a("p",[t._v("上面一大串编码，这是"),a("code",[t._v("commit id")]),t._v("(版本号),电脑生成的,首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交，上一个版本就是"),a("code",[t._v("HEAD^")]),t._v("，上上一个版本就是"),a("code",[t._v("EAD^^")]),t._v("，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100")]),t._v(" "),a("p",[t._v("好了，如果我们不小心提交错了，我们可以回退到上个版本，git会根据历史记录回退到上一个版本。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git reset --hard HEAD^\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git log --pretty=oneline\n3628162fb23d48395383f8f31179f24e0882e1e0 one\nea34578d54d6d7dd233c827ed32a8cd576c5ee85 two\n")])])]),a("p",[a("strong",[t._v("4.删除文件")])]),t._v(" "),a("p",[t._v("有时候我们想通过文件管理器把文件删除：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ rm 文件\n")])])]),a("p",[t._v("当然如果你想恢复文件可以用：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("$ git checkout --  文件\n")])])]),a("p",[t._v("恢复文件其实就是将我们暂存区内的版本替换了我们工作区的版本了。")]),t._v(" "),a("p",[t._v("git的版本操作基本就是这些了。")])])}],!1,null,null,null);v.options.__file="Git的版本控制.md";e.default=v.exports}}]);